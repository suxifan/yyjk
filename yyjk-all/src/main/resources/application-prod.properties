#\u751f\u4ea7\u73af\u5883\u914d\u7f6e
server.port=8089
server.ip=117.34.118.30

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://117.34.118.30:25432/datacenter
spring.datasource.username=postgres
spring.datasource.password=YuWGG07y

#ES\u914d\u7f6e\u53c2\u6570
elasticsearch.ip=192.168.0.107
elasticsearch.port=9300
elasticsearch.cluster.name=cictec


####################################################################################
############################## RabbitMQ Configuration Start ########################
spring.rabbitmq.host=192.168.10.190
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=s2njMf4F
spring.rabbitmq.virtual-host=/

## \u9a7e\u9a76\u884c\u4e3a\u9ed8\u8ba4\u4ea4\u6362\u673a\u540d\u79f0
rabbitmq.exchange.jsxw=jsxw.platform
##\u53c2\u6570\u4e0b\u53d1
rabbitmq.queue.jsxw.send.params=${rabbitmq.exchange.jsxw}.send.params
rabbitmq.routingKey.jsxw.send.params=${rabbitmq.queue.jsxw.send.params}
##\u8bbe\u5907\u6293\u62cd
rabbitmq.queue.jsxw.take.photo=${rabbitmq.exchange.jsxw}.take.photo
rabbitmq.routingKey.jsxw.take.photo=${rabbitmq.queue.jsxw.take.photo}
############################## RabbitMQ Configuration End ##########################
####################################################################################

#\u8c03\u5ea6http\u8bbf\u95ee\u63a5\u53e3\u5730\u5740
gjdd.http.url = http://117.34.118.30:9082/base
#\u75b2\u52b3http\u8bbf\u95ee\u63a5\u53e3\u5730\u5740
plapp.http.url = http://192.168.0.106:6007/plapp

#\u5929\u6c14http\u8bbf\u95ee\u63a5\u53e3\u5730\u5740
weather.http.url = http://life.yebus.cn:8787/life/city/weather/get
#\u57ce\u5e02\u5929\u6c14\u8bbf\u95ee\u53c2\u6570
weather.query.cityname = \u5b9c\u5bbe

#\u901a\u8fc7HTTP\u63a5\u53e3\u6293\u53d6\u524d\u4e00\u5929\u5230\u7ad9\u6570\u636e
jobs.schedule.dispatch.arrivestation.grab = 0 0 3 * * ?
#\u5230\u7ad9\u6570\u636e\u8865\u6392\u73ed\u5b9a\u65f6\u4efb\u52a1
jobs.schedule.dispatch.arrivestation.completeclass = 0 0 4 * * ?

######################################################################################################################
###\u4ee5\u4e0b\u5b9a\u65f6\u4efb\u52a1\uff0c\u5ba2\u6d41\u5b9a\u65f6\u4efb\u52a1\u662f\u57fa\u7840\uff0c\u540e\u9762\u7684\u65e5\u62a5\u548c\u6708\u62a5\u90fd\u662f\u5df2\u5ba2\u6d41\u6570\u636e\u4e3a\u57fa\u7840\u505a\u51fa\u7684\u5206\u6790\uff0c\u6240\u4ee5\u65f6\u95f4\u8981\u6bd4\u5ba2\u6d41\u5b9a\u65f6\u4efb\u52a1\u665a\u4e00\u4e9b###
######################################################################################################################
#\u5ba2\u6d41\u5b9a\u65f6\u4efb\u52a1
jobs.schedule.passengerflow = 0 0 1 * * ?
#\u5ba2\u6d41\u6ee1\u8f7d\u7387\u5b9a\u65f6\u4efb\u52a1(\u65e5\u62a5)
jobs.schedule.passengerflow.fullload.day = 0 10 2 * * ?
#\u7ad9\u70b9\u767b\u964d\u91cf\u67e5\u8be2(\u65e5\u671f\u533a\u95f4)
jobs.schedule.passengerflow.staonoff.day = 0 20 2 * * ?
#\u7ebf\u8def\u5ba2\u6d41\u8fd0\u529b\u8fd0\u91cf\u5206\u6790\u5b9a\u65f6\u4efb\u52a1\uff08\u65e5\u62a5\uff09
jobs.schedule.passengerflow.capacityvolume.day = 0 30 2 * * ?
#\u7ebf\u8def\u5ba2\u6d41\u9ad8\u5cf0\u65ad\u9762\u5b9a\u65f6\u4efb\u52a1(\u6708\u62a5)
jobs.schedule.passengerflow.section.month = 0 0 1 1 * ?
#\u7ebf\u8def\u7ad9\u95f4\u8fd0\u884c\u65f6\u95f4\u5206\u6790\uff08\u6708\u62a5\uff09
jobs.schedule.passengerflow.lengthtime.month = 0 0 2 1 * ?
#\u603b\u4f53\u5ba2\u6d41\u9ad8\u5cf0\u65f6\u523b\uff08\u6708\u62a5\uff09
jobs.schedule.passengerflow.peak.month = 0 0 3 1 * ?

#\u65e5\u5fd7
logging.config=classpath:logback.xml

#\u9ed8\u8ba4\u57ce\u5e02\u7ecf\u7eac\u5ea6\u5750\u6807
lat=28.76593
lng=104.61947
city=\u5b9c\u5bbe